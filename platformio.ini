; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
; upload_speed = 921600
upload_speed = 460800
monitor_speed =  115200
; ESP32 - Arduino 2.x
platform32 = espressif32@6.11.0
partitions = part32.csv # For arduino 2.x
; ESP32 - Arduino 3.x
; platform32 = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip # Arduino 3.x
; platform32 = https://github.com/pioarduino/platform-espressif32/releases/download/55.03.31/platform-espressif32.zip # Arduino 3.x
; partitions = part32_2.0Mb.csv # For arduino 3.x (0x1f0000 app size)
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-Os
	-Wno-pedantic
	-D CORE_DEBUG_LEVEL=0
	-D BAUD=${common_env_data.monitor_speed}
	-D USE_LITTLEFS=true
	-D PRESSUREMON=1
	-D CFG_APPNAME="\"pressuremon\""
	-D CFG_APPVER="\"0.7.0\""
	-D CFG_GITREV=\""beta-1\""
	; -D CORE_DEBUG_LEVEL=5
	; !python script/git_rev.py 
	; -D SKIP_SLEEPMODE=1
	; -D COLLECT_PERFDATA=1
	; -D CORE_DEBUG_LEVEL=2
	; -D RUN_HARDWARE_TEST=1 # Will run diagnositc setup to validate the GPIO configurations
	-D MAX_SKETCH_SPACE=0x1c0000 ; For Arduino 2.x
	; -D MAX_SKETCH_SPACE=0x1f0000 ; For Arduino 3.x
	-D CONFIG_ASYNC_TCP_MAX_ACK_TIME=5000   ; (keep default)
	-D CONFIG_ASYNC_TCP_PRIORITY=10         ; (keep default)
	-D CONFIG_ASYNC_TCP_QUEUE_SIZE=64       ; (keep default)
	-D CONFIG_ASYNC_TCP_RUNNING_CORE=1      ; force async_tcp task to be on same core as Arduino app (default is any core)
	-D CONFIG_ASYNC_TCP_STACK_SIZE=8192     ; reduce the stack size (default is 16K)
build_src_flags =
	-Wno-c++11-extensions
lib_deps =
	https://github.com/mp-se/espframework#1.2.6
	https://github.com/mp-se/gravitymon#dev
	; https://github.com/mp-se/gravitymon#2.3.0-beta2
	https://github.com/wollewald/ADS1115_WE#1.5.4
    https://github.com/bblanchon/ArduinoJson#v7.4.2
    https://github.com/256dpi/arduino-mqtt#v2.5.2
	https://github.com/ESP32Async/ESPAsyncWebServer#v3.8.1
	https://github.com/pstolarz/OneWireNg#0.14.0
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git#d2d70abe03299650b860e8ef74d7322d3f305cad
	https://github.com/ThingPulse/esp8266-oled-ssd1306#4.6.1
	https://github.com/stevemarple/SoftWire#v2.0.10
	https://github.com/stevemarple/AsyncDelay#v1.1.2
	https://github.com/ESP32Async/AsyncTCP#v3.4.8
	https://github.com/h2zero/NimBLE-Arduino#2.3.6
extra_scripts =  
	pre:script/board.py 
	script/copy_firmware.py
	script/create_versionjson.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz

[env:pressure-unit32]
; Unit testing environment - ESP32-C3 with test framework
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform32}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D PIN_VOLT=3
	-D PIN_SDA=8
	-D PIN_SCL=10
	-D CFG_FILENAMEBIN="\"firmware-unit.bin\""
build_src_flags = ${common_env_data.build_src_flags}
lib_deps = 
	https://github.com/bxparks/AUnit#v1.7.1
	${common_env_data.lib_deps}
board = lolin_c3_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<main*.cpp> +<../test/tests*.cpp>
monitor_filters = esp32_exception_decoder

[env:pressure-32s3_mini]
; ESP32-S3 Mini - Full featured with BLE, dual I2C, second sensor support
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32S3=1
	-D ENABLE_BLE=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D ENABLE_SECOND_SENSOR=1
build_src_flags = ${common_env_data.build_src_flags}
lib_deps = 
	${common_env_data.lib_deps}
lib_ignore = 
	mpu6050
board = lolin_s3_mini 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:pressure-32s2_mini]
; ESP32-S2 Mini - Single I2C (SoftWire for second sensor), no BLE, USB CDC
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32S2=1
	-D ENABLE_SECOND_SENSOR=1
	-D USE_SOFTWIRE=1 ; This CPU only has one hardware i2c controller
	-D ARDUINO_USB_CDC_ON_BOOT=1
build_src_flags = ${common_env_data.build_src_flags}
lib_deps = 
	${common_env_data.lib_deps}
lib_ignore = 
	mpu6050
	NimBLE-Arduino
board = lolin_s2_mini 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
monitor_filters = esp32_exception_decoder

[env:pressure-32c3_pico]
; ESP32-C3 Pico - Compact board with BLE, single I2C (SoftWire for second sensor)
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	; Only one hardware i2c controller, Wire1 needs to be defined for OLED driver
	; -D Wire1=Wire ; Needed for Arduino 3.x
	-D ENABLE_BLE=1
	-D ESP32C3=1
	-D USE_SOFTWIRE=1 ; This CPU only has one hardware i2c controller
	-D ENABLE_SECOND_SENSOR=1
build_src_flags = ${common_env_data.build_src_flags}
lib_deps = 
	${common_env_data.lib_deps}
lib_ignore = 
	mpu6050
board = lolin_c3_pico 
board_build.variants_dir = boards
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
monitor_filters = esp32_exception_decoder

